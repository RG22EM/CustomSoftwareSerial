

 CustomSoftwareSerial(uint8_t receivePin, uint8_t transmitPin, bool inverse_logic = false);
  ~CustomSoftwareSerial();
  void begin(long speed);
  void begin(long speed, uint16_t configuration);
  bool listen();
  void end();
  bool isListening() { return this == active_object; }
  bool overflow() { bool ret = _buffer_overflow; _buffer_overflow = false; return ret; }
  int peek();

  uint8_t getNumberOfDataBit();
  Parity getParity();
  uint8_t getNumberOfStopBit();
  uint8_t calculateNumberOfBits1(uint8_t sentData);
  void writeStopBits();
  void writeParityBits(uint8_t numberOfBit1);

  virtual size_t write(uint8_t byte);
  virtual int read();
  virtual int available();
  virtual void flush();
